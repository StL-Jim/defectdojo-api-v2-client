# coding: utf-8

"""
    Defect Dojo API

    To use the API you need be authorized.  # noqa: E501

    The version of the OpenAPI document: v2
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest

import openapi_client
from openapi_client.api.findings_api import FindingsApi  # noqa: E501
from openapi_client.rest import ApiException


class TestFindingsApi(unittest.TestCase):
    """FindingsApi unit test stubs"""

    def setUp(self):
        self.api = openapi_client.api.findings_api.FindingsApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_findings_accept_risks(self):
        """Test case for findings_accept_risks

        """
        pass

    def test_findings_create(self):
        """Test case for findings_create

        """
        pass

    def test_findings_delete(self):
        """Test case for findings_delete

        """
        pass

    def test_findings_duplicate_reset_finding_duplicate_status(self):
        """Test case for findings_duplicate_reset_finding_duplicate_status

        """
        pass

    def test_findings_files_create(self):
        """Test case for findings_files_create

        """
        pass

    def test_findings_files_read(self):
        """Test case for findings_files_read

        """
        pass

    def test_findings_generate_report(self):
        """Test case for findings_generate_report

        """
        pass

    def test_findings_get_duplicate_cluster(self):
        """Test case for findings_get_duplicate_cluster

        """
        pass

    def test_findings_list(self):
        """Test case for findings_list

        """
        pass

    def test_findings_metadata_create(self):
        """Test case for findings_metadata_create

        """
        pass

    def test_findings_metadata_delete(self):
        """Test case for findings_metadata_delete

        """
        pass

    def test_findings_metadata_read(self):
        """Test case for findings_metadata_read

        """
        pass

    def test_findings_metadata_update(self):
        """Test case for findings_metadata_update

        """
        pass

    def test_findings_notes_create(self):
        """Test case for findings_notes_create

        """
        pass

    def test_findings_notes_read(self):
        """Test case for findings_notes_read

        """
        pass

    def test_findings_partial_update(self):
        """Test case for findings_partial_update

        """
        pass

    def test_findings_read(self):
        """Test case for findings_read

        """
        pass

    def test_findings_remove_note(self):
        """Test case for findings_remove_note

        """
        pass

    def test_findings_remove_tags_partial_update(self):
        """Test case for findings_remove_tags_partial_update

        """
        pass

    def test_findings_remove_tags_update(self):
        """Test case for findings_remove_tags_update

        """
        pass

    def test_findings_request_response_create(self):
        """Test case for findings_request_response_create

        """
        pass

    def test_findings_request_response_read(self):
        """Test case for findings_request_response_read

        """
        pass

    def test_findings_set_finding_as_original(self):
        """Test case for findings_set_finding_as_original

        """
        pass

    def test_findings_tags_create(self):
        """Test case for findings_tags_create

        """
        pass

    def test_findings_tags_read(self):
        """Test case for findings_tags_read

        """
        pass

    def test_findings_update(self):
        """Test case for findings_update

        """
        pass


if __name__ == '__main__':
    unittest.main()
