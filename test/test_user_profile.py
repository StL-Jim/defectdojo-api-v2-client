# coding: utf-8

"""
    Defect Dojo API

    To use the API you need be authorized.  # noqa: E501

    The version of the OpenAPI document: v2
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.user_profile import UserProfile  # noqa: E501
from openapi_client.rest import ApiException

class TestUserProfile(unittest.TestCase):
    """UserProfile unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test UserProfile
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.user_profile.UserProfile()  # noqa: E501
        if include_optional :
            return UserProfile(
                user = openapi_client.models.user.User(
                    id = 56, 
                    username = 'a', 
                    first_name = '0', 
                    last_name = '0', 
                    email = '0', 
                    last_login = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    is_active = True, 
                    is_superuser = True, 
                    password = '0', ), 
                user_contact_info = openapi_client.models.user_contact_info.UserContactInfo(
                    id = 56, 
                    title = '0', 
                    phone_number = 'a', 
                    cell_number = 'a', 
                    twitter_username = '0', 
                    github_username = '0', 
                    slack_username = '0', 
                    slack_user_id = '0', 
                    block_execution = True, 
                    force_password_reset = True, 
                    user = 56, ), 
                global_role = openapi_client.models.global_role.GlobalRole(
                    id = 56, 
                    user = 56, 
                    group = 56, 
                    role = 56, ), 
                dojo_group_member = [
                    openapi_client.models.dojo_group_member.DojoGroupMember(
                        id = 56, 
                        group = 56, 
                        user = 56, 
                        role = 56, )
                    ], 
                product_type_member = [
                    openapi_client.models.product_type_member.ProductTypeMember(
                        id = 56, 
                        product_type = 56, 
                        user = 56, 
                        role = 56, )
                    ], 
                product_member = [
                    openapi_client.models.product_member.ProductMember(
                        id = 56, 
                        product = 56, 
                        user = 56, 
                        role = 56, )
                    ]
            )
        else :
            return UserProfile(
                user = openapi_client.models.user.User(
                    id = 56, 
                    username = 'a', 
                    first_name = '0', 
                    last_name = '0', 
                    email = '0', 
                    last_login = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    is_active = True, 
                    is_superuser = True, 
                    password = '0', ),
                user_contact_info = openapi_client.models.user_contact_info.UserContactInfo(
                    id = 56, 
                    title = '0', 
                    phone_number = 'a', 
                    cell_number = 'a', 
                    twitter_username = '0', 
                    github_username = '0', 
                    slack_username = '0', 
                    slack_user_id = '0', 
                    block_execution = True, 
                    force_password_reset = True, 
                    user = 56, ),
                global_role = openapi_client.models.global_role.GlobalRole(
                    id = 56, 
                    user = 56, 
                    group = 56, 
                    role = 56, ),
                dojo_group_member = [
                    openapi_client.models.dojo_group_member.DojoGroupMember(
                        id = 56, 
                        group = 56, 
                        user = 56, 
                        role = 56, )
                    ],
                product_type_member = [
                    openapi_client.models.product_type_member.ProductTypeMember(
                        id = 56, 
                        product_type = 56, 
                        user = 56, 
                        role = 56, )
                    ],
                product_member = [
                    openapi_client.models.product_member.ProductMember(
                        id = 56, 
                        product = 56, 
                        user = 56, 
                        role = 56, )
                    ],
        )

    def testUserProfile(self):
        """Test UserProfile"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
