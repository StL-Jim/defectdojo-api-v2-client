# coding: utf-8

"""
    Defect Dojo API

    To use the API you need be authorized.  # noqa: E501

    The version of the OpenAPI document: v2
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.finding_test import FindingTest  # noqa: E501
from openapi_client.rest import ApiException

class TestFindingTest(unittest.TestCase):
    """FindingTest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test FindingTest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.finding_test.FindingTest()  # noqa: E501
        if include_optional :
            return FindingTest(
                id = 56, 
                title = '0', 
                test_type = openapi_client.models.finding_test_type.FindingTestType(
                    id = 56, 
                    name = '0', ), 
                engagement = openapi_client.models.finding_engagement.FindingEngagement(
                    id = 56, 
                    name = '0', 
                    product = openapi_client.models.finding_product.FindingProduct(
                        id = 56, 
                        name = '0', 
                        prod_type = openapi_client.models.finding_prod_type.FindingProdType(
                            id = 56, 
                            name = '0', ), ), 
                    branch_tag = '0', 
                    build_id = '0', 
                    commit_hash = '0', 
                    version = '0', ), 
                environment = openapi_client.models.finding_environment.FindingEnvironment(
                    id = 56, 
                    name = '0', ), 
                branch_tag = '0', 
                build_id = '0', 
                commit_hash = '0', 
                version = '0'
            )
        else :
            return FindingTest(
        )

    def testFindingTest(self):
        """Test FindingTest"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
