# coding: utf-8

"""
    Defect Dojo API

    To use the API you need be authorized.  # noqa: E501

    The version of the OpenAPI document: v2
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.re_import_scan import ReImportScan  # noqa: E501
from openapi_client.rest import ApiException

class TestReImportScan(unittest.TestCase):
    """ReImportScan unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ReImportScan
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.re_import_scan.ReImportScan()  # noqa: E501
        if include_optional :
            return ReImportScan(
                scan_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                minimum_severity = 'Info', 
                active = True, 
                verified = True, 
                scan_type = 'Acunetix Scan', 
                endpoint_to_add = 56, 
                file = '0', 
                product_type_name = '0', 
                product_name = '0', 
                engagement_name = '0', 
                test = 56, 
                test_title = '0', 
                auto_create_context = True, 
                push_to_jira = True, 
                close_old_findings = True, 
                version = '0', 
                build_id = '0', 
                branch_tag = '0', 
                commit_hash = '0', 
                api_scan_configuration = 56, 
                service = '0', 
                environment = '0', 
                lead = 56, 
                tags = [
                    '0'
                    ], 
                group_by = 'component_name', 
                test_id = 56, 
                engagement_id = 56, 
                product_id = 56, 
                product_type_id = 56, 
                statistics = openapi_client.models.import_statistics.ImportStatistics(
                    before = openapi_client.models.severity_status_statistics.SeverityStatusStatistics(
                        info = openapi_client.models.status_statistics.StatusStatistics(
                            active = 56, 
                            verified = 56, 
                            duplicate = 56, 
                            false_p = 56, 
                            out_of_scope = 56, 
                            is_mitigated = 56, 
                            risk_accepted = 56, 
                            total = 56, ), 
                        low = openapi_client.models.status_statistics.StatusStatistics(
                            active = 56, 
                            verified = 56, 
                            duplicate = 56, 
                            false_p = 56, 
                            out_of_scope = 56, 
                            is_mitigated = 56, 
                            risk_accepted = 56, 
                            total = 56, ), 
                        medium = openapi_client.models.status_statistics.StatusStatistics(
                            active = 56, 
                            verified = 56, 
                            duplicate = 56, 
                            false_p = 56, 
                            out_of_scope = 56, 
                            is_mitigated = 56, 
                            risk_accepted = 56, 
                            total = 56, ), 
                        high = openapi_client.models.status_statistics.StatusStatistics(
                            active = 56, 
                            verified = 56, 
                            duplicate = 56, 
                            false_p = 56, 
                            out_of_scope = 56, 
                            is_mitigated = 56, 
                            risk_accepted = 56, 
                            total = 56, ), 
                        critical = openapi_client.models.status_statistics.StatusStatistics(
                            active = 56, 
                            verified = 56, 
                            duplicate = 56, 
                            false_p = 56, 
                            out_of_scope = 56, 
                            is_mitigated = 56, 
                            risk_accepted = 56, 
                            total = 56, ), 
                        total = openapi_client.models.status_statistics.StatusStatistics(
                            active = 56, 
                            verified = 56, 
                            duplicate = 56, 
                            false_p = 56, 
                            out_of_scope = 56, 
                            is_mitigated = 56, 
                            risk_accepted = 56, 
                            total = 56, ), ), 
                    delta = openapi_client.models.delta_statistics.DeltaStatistics(
                        created = openapi_client.models.severity_status_statistics.SeverityStatusStatistics(
                            info = openapi_client.models.status_statistics.StatusStatistics(
                                active = 56, 
                                verified = 56, 
                                duplicate = 56, 
                                false_p = 56, 
                                out_of_scope = 56, 
                                is_mitigated = 56, 
                                risk_accepted = 56, 
                                total = 56, ), 
                            low = openapi_client.models.status_statistics.StatusStatistics(
                                active = 56, 
                                verified = 56, 
                                duplicate = 56, 
                                false_p = 56, 
                                out_of_scope = 56, 
                                is_mitigated = 56, 
                                risk_accepted = 56, 
                                total = 56, ), 
                            medium = openapi_client.models.status_statistics.StatusStatistics(
                                active = 56, 
                                verified = 56, 
                                duplicate = 56, 
                                false_p = 56, 
                                out_of_scope = 56, 
                                is_mitigated = 56, 
                                risk_accepted = 56, 
                                total = 56, ), 
                            high = openapi_client.models.status_statistics.StatusStatistics(
                                active = 56, 
                                verified = 56, 
                                duplicate = 56, 
                                false_p = 56, 
                                out_of_scope = 56, 
                                is_mitigated = 56, 
                                risk_accepted = 56, 
                                total = 56, ), 
                            critical = openapi_client.models.status_statistics.StatusStatistics(
                                active = 56, 
                                verified = 56, 
                                duplicate = 56, 
                                false_p = 56, 
                                out_of_scope = 56, 
                                is_mitigated = 56, 
                                risk_accepted = 56, 
                                total = 56, ), 
                            total = openapi_client.models.status_statistics.StatusStatistics(
                                active = 56, 
                                verified = 56, 
                                duplicate = 56, 
                                false_p = 56, 
                                out_of_scope = 56, 
                                is_mitigated = 56, 
                                risk_accepted = 56, 
                                total = 56, ), ), 
                        closed = openapi_client.models.severity_status_statistics.SeverityStatusStatistics(
                            info = openapi_client.models.status_statistics.StatusStatistics(
                                active = 56, 
                                verified = 56, 
                                duplicate = 56, 
                                false_p = 56, 
                                out_of_scope = 56, 
                                is_mitigated = 56, 
                                risk_accepted = 56, 
                                total = 56, ), 
                            low = openapi_client.models.status_statistics.StatusStatistics(
                                active = 56, 
                                verified = 56, 
                                duplicate = 56, 
                                false_p = 56, 
                                out_of_scope = 56, 
                                is_mitigated = 56, 
                                risk_accepted = 56, 
                                total = 56, ), 
                            medium = openapi_client.models.status_statistics.StatusStatistics(
                                active = 56, 
                                verified = 56, 
                                duplicate = 56, 
                                false_p = 56, 
                                out_of_scope = 56, 
                                is_mitigated = 56, 
                                risk_accepted = 56, 
                                total = 56, ), 
                            high = openapi_client.models.status_statistics.StatusStatistics(
                                active = 56, 
                                verified = 56, 
                                duplicate = 56, 
                                false_p = 56, 
                                out_of_scope = 56, 
                                is_mitigated = 56, 
                                risk_accepted = 56, 
                                total = 56, ), 
                            critical = openapi_client.models.status_statistics.StatusStatistics(
                                active = 56, 
                                verified = 56, 
                                duplicate = 56, 
                                false_p = 56, 
                                out_of_scope = 56, 
                                is_mitigated = 56, 
                                risk_accepted = 56, 
                                total = 56, ), 
                            total = openapi_client.models.status_statistics.StatusStatistics(
                                active = 56, 
                                verified = 56, 
                                duplicate = 56, 
                                false_p = 56, 
                                out_of_scope = 56, 
                                is_mitigated = 56, 
                                risk_accepted = 56, 
                                total = 56, ), ), 
                        reactivated = openapi_client.models.severity_status_statistics.SeverityStatusStatistics(
                            info = openapi_client.models.status_statistics.StatusStatistics(
                                active = 56, 
                                verified = 56, 
                                duplicate = 56, 
                                false_p = 56, 
                                out_of_scope = 56, 
                                is_mitigated = 56, 
                                risk_accepted = 56, 
                                total = 56, ), 
                            low = openapi_client.models.status_statistics.StatusStatistics(
                                active = 56, 
                                verified = 56, 
                                duplicate = 56, 
                                false_p = 56, 
                                out_of_scope = 56, 
                                is_mitigated = 56, 
                                risk_accepted = 56, 
                                total = 56, ), 
                            medium = openapi_client.models.status_statistics.StatusStatistics(
                                active = 56, 
                                verified = 56, 
                                duplicate = 56, 
                                false_p = 56, 
                                out_of_scope = 56, 
                                is_mitigated = 56, 
                                risk_accepted = 56, 
                                total = 56, ), 
                            high = openapi_client.models.status_statistics.StatusStatistics(
                                active = 56, 
                                verified = 56, 
                                duplicate = 56, 
                                false_p = 56, 
                                out_of_scope = 56, 
                                is_mitigated = 56, 
                                risk_accepted = 56, 
                                total = 56, ), 
                            critical = openapi_client.models.status_statistics.StatusStatistics(
                                active = 56, 
                                verified = 56, 
                                duplicate = 56, 
                                false_p = 56, 
                                out_of_scope = 56, 
                                is_mitigated = 56, 
                                risk_accepted = 56, 
                                total = 56, ), 
                            total = openapi_client.models.status_statistics.StatusStatistics(
                                active = 56, 
                                verified = 56, 
                                duplicate = 56, 
                                false_p = 56, 
                                out_of_scope = 56, 
                                is_mitigated = 56, 
                                risk_accepted = 56, 
                                total = 56, ), ), 
                        left_untouched = openapi_client.models.severity_status_statistics.SeverityStatusStatistics(
                            info = openapi_client.models.status_statistics.StatusStatistics(
                                active = 56, 
                                verified = 56, 
                                duplicate = 56, 
                                false_p = 56, 
                                out_of_scope = 56, 
                                is_mitigated = 56, 
                                risk_accepted = 56, 
                                total = 56, ), 
                            low = openapi_client.models.status_statistics.StatusStatistics(
                                active = 56, 
                                verified = 56, 
                                duplicate = 56, 
                                false_p = 56, 
                                out_of_scope = 56, 
                                is_mitigated = 56, 
                                risk_accepted = 56, 
                                total = 56, ), 
                            medium = openapi_client.models.status_statistics.StatusStatistics(
                                active = 56, 
                                verified = 56, 
                                duplicate = 56, 
                                false_p = 56, 
                                out_of_scope = 56, 
                                is_mitigated = 56, 
                                risk_accepted = 56, 
                                total = 56, ), 
                            high = openapi_client.models.status_statistics.StatusStatistics(
                                active = 56, 
                                verified = 56, 
                                duplicate = 56, 
                                false_p = 56, 
                                out_of_scope = 56, 
                                is_mitigated = 56, 
                                risk_accepted = 56, 
                                total = 56, ), 
                            critical = openapi_client.models.status_statistics.StatusStatistics(
                                active = 56, 
                                verified = 56, 
                                duplicate = 56, 
                                false_p = 56, 
                                out_of_scope = 56, 
                                is_mitigated = 56, 
                                risk_accepted = 56, 
                                total = 56, ), 
                            total = openapi_client.models.status_statistics.StatusStatistics(
                                active = 56, 
                                verified = 56, 
                                duplicate = 56, 
                                false_p = 56, 
                                out_of_scope = 56, 
                                is_mitigated = 56, 
                                risk_accepted = 56, 
                                total = 56, ), ), ), 
                    after = openapi_client.models.severity_status_statistics.SeverityStatusStatistics(
                        info = openapi_client.models.status_statistics.StatusStatistics(
                            active = 56, 
                            verified = 56, 
                            duplicate = 56, 
                            false_p = 56, 
                            out_of_scope = 56, 
                            is_mitigated = 56, 
                            risk_accepted = 56, 
                            total = 56, ), 
                        low = openapi_client.models.status_statistics.StatusStatistics(
                            active = 56, 
                            verified = 56, 
                            duplicate = 56, 
                            false_p = 56, 
                            out_of_scope = 56, 
                            is_mitigated = 56, 
                            risk_accepted = 56, 
                            total = 56, ), 
                        medium = openapi_client.models.status_statistics.StatusStatistics(
                            active = 56, 
                            verified = 56, 
                            duplicate = 56, 
                            false_p = 56, 
                            out_of_scope = 56, 
                            is_mitigated = 56, 
                            risk_accepted = 56, 
                            total = 56, ), 
                        high = openapi_client.models.status_statistics.StatusStatistics(
                            active = 56, 
                            verified = 56, 
                            duplicate = 56, 
                            false_p = 56, 
                            out_of_scope = 56, 
                            is_mitigated = 56, 
                            risk_accepted = 56, 
                            total = 56, ), 
                        critical = openapi_client.models.status_statistics.StatusStatistics(
                            active = 56, 
                            verified = 56, 
                            duplicate = 56, 
                            false_p = 56, 
                            out_of_scope = 56, 
                            is_mitigated = 56, 
                            risk_accepted = 56, 
                            total = 56, ), 
                        total = openapi_client.models.status_statistics.StatusStatistics(
                            active = 56, 
                            verified = 56, 
                            duplicate = 56, 
                            false_p = 56, 
                            out_of_scope = 56, 
                            is_mitigated = 56, 
                            risk_accepted = 56, 
                            total = 56, ), ), )
            )
        else :
            return ReImportScan(
                scan_type = 'Acunetix Scan',
        )

    def testReImportScan(self):
        """Test ReImportScan"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
