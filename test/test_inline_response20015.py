# coding: utf-8

"""
    Defect Dojo API

    To use the API you need be authorized.  # noqa: E501

    The version of the OpenAPI document: v2
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.inline_response20015 import InlineResponse20015  # noqa: E501
from openapi_client.rest import ApiException

class TestInlineResponse20015(unittest.TestCase):
    """InlineResponse20015 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test InlineResponse20015
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.inline_response20015.InlineResponse20015()  # noqa: E501
        if include_optional :
            return InlineResponse20015(
                count = 56, 
                next = '0', 
                previous = '0', 
                results = [
                    openapi_client.models.jira_issue.JIRAIssue(
                        id = 56, 
                        url = '0', 
                        jira_id = '0', 
                        jira_key = '0', 
                        jira_creation = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        jira_change = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        jira_project = 56, 
                        finding = 56, 
                        engagement = 56, 
                        finding_group = 56, )
                    ]
            )
        else :
            return InlineResponse20015(
                count = 56,
                results = [
                    openapi_client.models.jira_issue.JIRAIssue(
                        id = 56, 
                        url = '0', 
                        jira_id = '0', 
                        jira_key = '0', 
                        jira_creation = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        jira_change = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        jira_project = 56, 
                        finding = 56, 
                        engagement = 56, 
                        finding_group = 56, )
                    ],
        )

    def testInlineResponse20015(self):
        """Test InlineResponse20015"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
